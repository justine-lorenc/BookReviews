@model BookReviews.Web.ViewModels.AddReviewVM
@using BookReviews.Impl;

@Html.HiddenFor(m => m.Book.Id)
@Html.HiddenFor(m => m.Book.Title)
@Html.HiddenFor(m => m.Book.SubTitle)
@Html.HiddenFor(m => m.Book.Pages)
@Html.HiddenFor(m => m.Book.DatePublished)
@Html.HiddenFor(m => m.Book.Description)
@Html.HiddenFor(m => m.Book.CoverUrl)

@for (int i = 0; i < Model.Book.Authors.Count; i++)
{
    @Html.HiddenFor(m => Model.Book.Authors[i].Id)
    @Html.HiddenFor(m => Model.Book.Authors[i].Name)
}

@for (int i = 0; i < Model.Genres.Count; i++)
{
    @Html.HiddenFor(m => Model.Genres[i].Id)
    @Html.HiddenFor(m => Model.Genres[i].Name)
    @Html.HiddenFor(m => Model.Genres[i].IsFiction)
}

<div class="col-90">
    @Html.LabelFor(m => m.Rating)
    @Html.TextBoxFor(m => m.Rating, null, new { type = "number", value = 0.0, step = Globals.Ranges.Rating.Increment, 
        min = Globals.Ranges.Rating.Minimum, max = Globals.Ranges.Rating.Maximum, @class = "form-field" })
    @Html.ValidationMessageFor(m => m.Rating, null, new { @class = "form-error" })
</div>
<div class="col-90">
    @Html.LabelFor(m => m.BookFormat)
    @Html.EnumDropDownListFor(m => m.BookFormat, new { @class = "form-field" })
    @Html.ValidationMessageFor(m => m.BookFormat, null, new { @class = "form-error" })
</div>
<div class="col-90">
    @Html.LabelFor(m => m.GenreId)
    @Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name", Model.GenreId), new { @class = "form-field" })
    @Html.ValidationMessageFor(m => m.GenreId, null, new { @class = "form-error" })
</div>
<div class="col-90">
    @Html.LabelFor(m => m.Notes)
    @Html.TextAreaFor(m => m.Notes, new { maxLength = Globals.MaxLengths.Review.Notes, @class = "form-field" })
    @Html.ValidationMessageFor(m => m.Notes, null, new { @class = "form-error" })
</div>

@model BookReviews.Web.Models.BookInfo
@using BookReviews.Impl.Models.Enums;
@using BookReviews.Web.Models;
@using BookReviews.Web.Models.Enums;
@using BookReviews.Web.Utilities;

@{
    ViewBag.Title = Model.Book.Title;
}

@Html.Partial("_ResultMessage")

@Html.HiddenFor(m => m.Book.Id)

<div class="book-info">
    @{
        string authors = ViewExtensions.GetAuthorLinks(Model.Book.Authors);
    }

    <div class="book-cover">
        @Html.Raw(ViewExtensions.GetCoverImage(Model.Book.CoverUrl, ImageSize.Large))
    </div>

    <div class="book-details">
        <h3>@Model.Book.Title</h3>

        @if (!String.IsNullOrWhiteSpace(Model.Book.SubTitle))
        {
            <div>@Model.Book.SubTitle</div>
        }

        <div class="core-detail">By @Html.Raw(authors)</div>

        <div class="core-detail">@Model.Book.Pages pages</div>

        <div class="core-detail">Published @Model.Book.DatePublished.ToString("MMMM d, yyyy")</div>

        @if (Model.Book.Description.Length <= 500)
        {
            <div>@Model.Book.Description</div>
        }
        else
        {
            <div id="book-description-short">@Model.Book.Description.Substring(0, 500)...</div>

            <div id="book-description-full">@Model.Book.Description</div>

            <a href="" id="toggle-description" data-state="more">More</a>
        }
    </div>
</div>

<div id="book-reviews" class="book-reviews">
    @Html.Partial("~/Views/Review/_BookReviews.cshtml", Model.Reviews)
</div>


    @section Scripts {
        <script type="text/javascript">
        $(document).ready(function () {
            $("#book-description-short").show();
            $("#book-description-full").hide();

            $("#btn-delete-review").on("click", function (event) {
                event.preventDefault();
                const reviewId = $(this).attr("data-review-id");
                const bookId = $(this).attr("data-book-id");

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("DeleteReview", "Review", new { id = Model.Reviews.UserReview?.Id ?? 0, bookId = Model.Book?.Id ?? 0 })",
                    data: { id: reviewId, bookId: bookId },
                    dataType: "json",
                    success: function() {
                        location.reload();
                    }
                });
            });

            $("#toggle-description").on("click", function (event) {
                event.preventDefault();
                let currentState = $(this).attr("data-state");

                if (currentState === "more") {
                    $("#book-description-short").hide();
                    $("#book-description-full").show();
                    $(this).attr("data-state", "less")
                    $(this).text("Less");
                }
                else {
                    $("#book-description-short").show();
                    $("#book-description-full").hide();
                    $(this).attr("data-state", "more")
                    $(this).text("More");
                }
            })

            $("#book-reviews").on("change", "#review-sort-select", function () {
                const bookId = $(this).attr("data-book-id");
                let sortBy = $(this).val();

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetReviews", "Book", new { id = Model.Book?.Id ?? 0 })",
                    data: { id: bookId, sortBy: sortBy },
                    dataType: "html",
                    success: function (result) {
                        $("#book-reviews").html(result);
                    }
                });
            });
        });
        </script>
    }

@model SearchVM
@using BookReviews.Web.ViewModels;
@using BookReviews.Web.Utilities;

@{
    ViewBag.Title = "Search";
}

<div>
    <h3>@ViewBag.Title</h3>

    @using (Html.BeginForm("Search", "Book", FormMethod.Get, new { @class = "form-horizontal" }))
    {
        <div>
            @Html.EnumDropDownListFor(m => m.SearchCategory)
            @Html.ValidationMessageFor(m => m.SearchCategory)
        </div>
        <div>
            @Html.TextBoxFor(m => m.SearchTerm, new { maxLength = 50 })
            @Html.ValidationMessageFor(m => m.SearchTerm)
        </div>
        <div>
            <button type="submit" value="Submit">Search</button>
        </div>
    }

    @if (Model != null && !String.IsNullOrWhiteSpace(Model.SearchTerm))
    {
        <h4>@Model.Results.Count results for "@Model.SearchTerm"</h4>

        foreach (var result in Model.Results)
        {
            <div class="search-result">
                @{
                    string authors = ViewExtensions.GetAuthorLinks(result.Authors, 2);

                    string description = String.Empty;
                    if (!String.IsNullOrWhiteSpace(result.Description))
                    {
                        description = result.Description.Length > 200
                            ? $"{result.Description.Substring(0, 200)}..." : result.Description;
                    }
                }
                <div class="book-cover">
                    @Html.Raw(ViewExtensions.GetCoverImage(@result.CoverUrl, false))
                </div>
                <div class="book-summary">
                    <div>
                        @Html.ActionLink(result.Title, "Index", "Book", new { id = result.Id }, new { @class = "book-title" })
                    </div>

                    <div>By @Html.Raw(authors)</div>

                    <div>Published @result.DatePublished.Year</div>

                    <div>@description</div>
                </div>
            </div>
        }
    }
</div>
